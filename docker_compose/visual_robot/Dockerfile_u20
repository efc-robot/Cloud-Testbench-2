FROM ghcr.io/linuxserver/baseimage-ubuntu:focal

# set version label
ARG BUILD_DATE
ARG VERSION
ARG CODE_RELEASE
LABEL build_version="Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}"
LABEL maintainer="aptalca"

#Â environment settings
ARG DEBIAN_FRONTEND="noninteractive"
ENV HOME="/home"
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8


# add local files (code server)
COPY /root /
COPY /vnc /
# add local files (nginx conf)
COPY /foxGlove.conf /
# add local files (gazebo/gzweb models)
COPY assets.tar.xz /
COPY models.tar.xz /


# install runtime dependencies
RUN echo 'Etc/UTC' > /etc/timezone && \
    echo "**** install runtime dependencies ****" && \
    apt-get update && apt-get install -y \
        nginx \
        vim \
        git \
        jq \
        libatomic1 \
        nano \
        net-tools \
        iputils-ping \
        netcat \
        sudo \
        tzdata \
        dirmngr \
        gnupg2 \
        cmake \
        build-essential \
        nodejs \
        npm \
        fluxbox \
        x11vnc \
        xvfb \
        xterm \
        openbox \
    && \
    npm install -g n && n stable && \
# ROS & gazebo
    echo "deb http://packages.ros.org/ros/ubuntu focal main" > /etc/apt/sources.list.d/ros1-latest.list && \
    echo "deb http://snapshots.ros.org/galactic/final/ubuntu focal main" > /etc/apt/sources.list.d/ros2-snapshots.list && \
    echo "deb http://packages.ros.org/ros2/ubuntu focal main" > /etc/apt/sources.list.d/ros2-latest.list && \
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 && \
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 4B63CF8FDE49746E98FA01DDAD19BAB3CBF125EA && \
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 && \
    apt-get update && apt-get install --no-install-recommends -y \
        python3-colcon-common-extensions \
        python3-colcon-mixin \
        python3-pip \
        python3-rosdep \
        python3-rosinstall \
        python3-vcstools \
        python3-vcstool \
        openssh-server \
    && \
    pip3 install rosdepc && \
    rosdepc init && \
    rosdepc update --rosdistro noetic && \
    rosdepc update --rosdistro galactic && \
    rosdepc update --rosdistro foxy && \
    colcon mixin add default https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml && \
    colcon mixin update && \
    colcon metadata add default https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml && \
    colcon metadata update && \
    apt-get update && apt-get install -y --no-install-recommends \
        ros-noetic-desktop-full=1.5.0-1* \
        ros-galactic-desktop=0.9.3-2* \
        ros-foxy-desktop=0.9.2-1* \
        ros-noetic-rosbridge-suite \
        ros-galactic-rosbridge-suite \
        ros-foxy-rosbridge-suite \
        ros-noetic-gazebo-* \
        ros-galactic-gazebo-* \
        ros-foxy-gazebo-* \
        libjansson-dev \
        libboost-dev \
        imagemagick \
        libtinyxml-dev \
        mercurial \
    && \
    rm -rf /var/lib/apt/lists/* && \
# code-server
    echo "**** install code-server ****" && \
    if [ -z ${CODE_RELEASE+x} ]; then \
        CODE_RELEASE=$(curl -sX GET https://api.github.com/repos/coder/code-server/releases/latest \
        | awk '/tag_name/{print $4;exit}' FS='[""]' | sed 's|^v||'); \
    fi && \
    mkdir -p /app/code-server && \
    curl -o \
        /tmp/code-server.tar.gz -L \
        "https://github.com/coder/code-server/releases/download/v${CODE_RELEASE}/code-server-${CODE_RELEASE}-linux-amd64.tar.gz" && \
    tar xf /tmp/code-server.tar.gz -C \
        /app/code-server --strip-components=1 && \
    echo "**** clean up ****" && \
    apt-get clean && \
    rm -rf \
        /config/* \
        /tmp/* \
        /var/lib/apt/lists/* \
        /var/tmp/* \
    && \
# gzweb
    cd / && \
    git clone https://github.com/osrf/gzweb && \
    cd /gzweb && \
    /bin/bash -c 'source /usr/share/gazebo/setup.sh; npm run deploy ---' && \
    cd / && \
# move recources
    mv foxGlove.conf /etc/nginx/conf.d && \
    rm -rf /gzweb/http/client/assets && \
    rm -rf /usr/share/gazebo-11/models && \
    tar -xvf assets.tar.xz -C /gzweb/http/client && \
    tar -xvf models.tar.xz -C /usr/share/gazebo-11 && \
    rm /assets.tar.xz && \
    rm /models.tar.xz



# ports and volumes
EXPOSE 8443
EXPOSE 9091
EXPOSE 8080